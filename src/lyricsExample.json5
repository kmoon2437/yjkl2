{
    info: {
        title: '제목',
        subtitle: '부제목 또는 곡 자체의 변형(리믹스 ver 등) 관련 정보',
        relatedInfo: 'ost/tie-in 정보',

        /**
         * 성별은 M=남자,F=여자,X=혼성
         * 뒤에 숫자는 도(C)=1부터 시작해서
         * 도#(C#),레b(Db),레(D),레#(D#),미b(Eb),
         * 미(E),파(F),파#(F#),솔b(Gb),... 이렇게 1씩 증가
         * 단조(minor)는 음수로 바꾸면 됨(eg. -11 = Gm)
         */
        key: ['성별', 1],

        originalKey: ['...'], // key랑 같음(없어도 됨)
        singer: '가수',
        lyrics: '작사자', // 없어도 됨
        music: '작곡자', // 없어도 됨
        origin: '원곡이 있는 곡의 원곡 정보', // 없어도 됨
        tags: {
            singer: '가수태그',
            lyrics: '작사자태그',
            music: '작곡자태그',
            origin: '원곡정보태그'
        }
    },
    files: {
        // 얘네 둘 중 최소 하나는 무조건 있어야 됨
        midi: '반주.mid',
        audio: '반주.ogg',

        // 얘네는 있어도 되고 없어도 됨
        mv: '뮤비영상파일',
        album: '앨범사진파일'
    },
    meta: {
        mvTiming: 0, // 뮤비 시작타이밍(밀리초)
        medleyInfo: null, // 메들리곡용 정보(미구현)
        
        /**
         * bit field 형식
         * 1 = 밑에 나오는 발음표기 표시
         * 2 = 루비(일본어 후리가나용) 표시
         * 4 = 다국어용 고딕 폰트(Noto sans라던가) 사용
         * 얘네 중에 쓸 거 다 더한 값
         */
        layout: 0, // 없을 시 기본값 0

        // 가사 싱크(밀리초)(변환 과정에서 반영. 없을 시 기본값 0)
        syncOffset: 0,

        // audio파일 쓸 때 가사 싱크(밀리초)(변환 과정에서 반영. 없을 시 기본값 0)
        audioSyncOffset: 0,

        // 한 박자당 몇 틱으로 할 건지 설정(없을 시 기본값 120)
        ticksPerBeat: 120
    },
    
    // bpm 지정 관련(없을시 기본값 120)
    tempo: [
        // changeAt = 이 템포로 바뀔 시간(틱 단위)
        // bpm = 그냥 bpm
        // 중간에 바꾸려면 걍 여러 개 넣으면 됨
        { changeAt: 0, bpm: 196 },
        { changeAt: 1200, bpm: 138 }
    ],
    lyrics: [
        {
            // 줄 위치
            // 0 = 위보다 더 위(?),1 = 위,2 = 아래
            line: 1,

            // 표시시각
            show: 6000,

            // 숨김시각
            // 없으면 다음에 같은 위치에 오는 가사 표시시각으로 적용
            hide: 8000,

            // 발음표기
            sub: '발음',

            // style(가사 색)은 0(기본),1,2,3,4,5,6이 있음(없어도 됨. 6은 색칠 안되는거)
            style: 0,

            // 각종 파라미터
            // startCount는 시작 카운트 넣는 거고 align은 글자 정렬(둘 다 없어도 됨)
            params: { startCount: true, align: 0 },

            // 가사 내용
            data: [
                // 제일 뒤에 객체는 그 글자 관련 설정
                // 다음 가사가 있는 경우 끝시간을 null로 하거나 생략해도 됨
                ['가사', '시작시간', null, { style: 1 }],
                
                // 이렇게 하면 루비(ruby, 글자 위에 조그맣게 뜨는 거)를 넣을 수 있음
                // 일본에선 이런걸 후리가나라고도 부름
                [['내용', '후리가나'], 6120, { style: 1 }],

                // 띄어쓰기는 이렇게 하면 됨
                // 밑에 있는 다음 글자랑 색칠 시작 시간이 같은데
                // 어차피 공간만 차지하고 안 보이는 형태의 글자라 상관없음
                [' ', 6240],
                [['글자', '후리가나'], 6240, 6360],

                // 원한다면 한 줄에서 동시색칠이 가능하도록 만들 수도 있음
                // 또한 맨 뒤에 객체가 필요 없다면 아예 안 넣어도 됨
                [['글자2', '후리가나'], 6180, 6360],

                // 영어 가사나 숙자훈/아테지 등의 경우 이렇게 묶어서 후리가나를 넣을 수 있음
                // 이렇게 하면 이 안에서는 동시 색칠이 안 됨
                // (변환 과정에서 막거나 하지는 않으므로 후리가나를 색칠하지 않고 따로 분리하는 식으로 하면 가능하긴 함)
                { ruby: 'ブルー', data: [
                    ['b', 6480],
                    ['lu', 6540],
                    ['e', 6600]
                ] },
                [' ', 6660],
                { ruby: 'グラデイション', data: [
                    ['g', 6720],
                    ['ra', 6780],
                    ['d', 6840],
                    ['a', 6960],
                    ['tion', 7020]
                ] },
                [['光', 'ひかり'], [7140, 7200, 7320]], // 배열을 통해 시작시간을 여러 개 넣으면 그만큼 글자를 나눠 색칠함
                [['銃', 'じゅう'], [[2, 7380], 7440], 7600] // 2:1 비율로 나눠 색칠
            ]
        },
        {
            /* 지금은 이게 기본 방식이 돼서, 아마 여기서는
            위에서 설명한 거랑 거의 똑같은 걸 설명하고 있을 거임 */
            line: 1, show: 6000, hide: 8000,
            sub: '발음',
            style: 0,
            params: { startCount: true, align: 0 },
            // 여기서 start를 빼버림으로써
            // 원래 색칠이 진행되는 시간이 들어갈 자리에
            // 시작시간과 끝시간을 직접 넣어줄 수 있음
            // 이렇게 하면 한 줄 안에서 동시에 색칠 가능
            data: [
                ['가사', '시작시간', '끝시간', { style: 1 }],
                
                // 끝시간을 생략할 수 있으며, 이 경우 다음 가사의 시작시간이 이 가사의 끝시간으로 적용
                [['내용', '후리가나'], 6070, { style: 1 }],

                // 띄어쓰기의 경우도 이렇게 시작시간을 적어줘야
                // 이전 가사에서 끝시간을 생략했을 때도 정상 작동할 수 있음
                [' ', 6110],

                // 맨 뒤에 객체가 필요 없다면 아예 안 넣어도 됨
                [['글자', '후리가나'], 6110],

                // 영어 가사나 숙자훈/아테지 등의 경우 이렇게 묶어서 후리가나를 넣을 수 있음
                // 이렇게 하면 이 안에서는 동시 색칠이 안 됨
                // (변환 과정에서 막거나 하지는 않으므로 후리가나를 색칠하지 않고 따로 분리하는 식으로 하면 가능하긴 함)
                { ruby: 'ブルー', data: [
                    ['b',6080],
                    ['lu',6120],
                    ['e',6340]
                ] },
                [' ', 6400],
                { ruby: 'グラデイション', data: [
                    ['g', 6400],
                    ['ra', 6500],
                    ['d', 6620],
                    ['a', 6700],
                    ['tion', 6500]
                ] }
                // 시작시간 여러 개를 배열로 넣으면 글자를 일정한 비율로 나눠 색칠함
                [['光', 'ひかり'],[6500, 6520, 6560]],

                // 2:1 비율로 나눠 색칠
                [['銃', 'じゅう'],[[2, 6580], 6600], 6640]
            ]
        }
    ]
}